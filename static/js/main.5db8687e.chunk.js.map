{"version":3,"sources":["Components/InputTodo.js","Components/TodoItem.js","Components/TodoList.js","Components/Filters.js","Components/Footer.js","App.js","index.js"],"names":["InputTodo","state","newTodo","enterValue","event","key","target","value","_this","props","handleTodo","setState","handleBlur","_this2","this","react_default","a","createElement","Fragment","className","placeholder","onChange","onKeyDown","onBlur","React","Component","TodoItem","_ref","todo","item","id","changeCompleted","Date","type","concat","defaultChecked","isCompleted","onClick","map","elem","Object","objectSpread2","htmlFor","title","filter","TodoList","allCompleted","checkCompleted","todoState","every","checked","length","index","Components_TodoItem","Filters","filterType","selectFilter","handleClick","textContent","handleFilter","href","Footer","setFilter","Components_Filters","some","App","enterTodo","handleAddTodo","toConsumableArray","handleChangeTodo","handleSetFilter","filterTodo","todoFilter","_this$state","Components_InputTodo","Components_TodoList","Components_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5db8687e.chunk.js","sourcesContent":["import React from 'react';\nimport PropsTypes from 'prop-types';\n\nclass InputTodo extends React.Component {\n  state = {\n    newTodo: '',\n  }\n\n  enterValue = (event) => {\n    if (event.key === 'Enter' && event.target.value !== '') {\n      this.props.handleTodo(event.target.value);\n      this.setState({ newTodo: '' });\n    }\n  }\n\n  handleBlur = (event) => {\n    if (event.target.value !== '') {\n      this.props.handleTodo(event.target.value);\n      this.setState({ newTodo: '' });\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <header className=\"header\">\n          <h1>todos</h1>\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={this.state.newTodo}\n            onChange={event => (\n              this.setState({\n                newTodo: event.target.value,\n              })\n            )}\n            onKeyDown={this.enterValue}\n            onBlur={this.handleBlur}\n          />\n        </header>\n      </>\n    );\n  }\n}\n\nInputTodo.propTypes = { handleTodo: PropsTypes.func.isRequired };\n\nexport default InputTodo;\n","import React from 'react';\nimport PropsTypes from 'prop-types';\n\nconst TodoItem = ({ todo, item, id, changeCompleted }) => {\n  const handleCompleted = () => (\n    changeCompleted(todo.map(elem => (\n      item === elem\n        ? {\n          ...elem,\n          isCompleted: !item.isCompleted,\n        }\n        : elem\n    )))\n  );\n\n  return (\n    <li\n      className=\"\"\n      key={+new Date()}\n    >\n      <div\n        className=\"view\"\n      >\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          id={`todo-${id}`}\n          defaultChecked={item.isCompleted}\n          onClick={handleCompleted}\n        />\n        <p\n          htmlFor={`todo-${id}`}\n          className={`todo__item\n              ${item.isCompleted ? 'label--completed' : ''}`}\n        >\n          {item.title}\n        </p>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => (\n            changeCompleted(todo.filter(elem => (elem !== item)))\n          )}\n        />\n      </div>\n    </li>\n  );\n};\n\nTodoItem.propTypes = {\n  todo: PropsTypes.arrayOf.isRequired,\n  changeCompleted: PropsTypes.func.isRequired,\n  item: PropsTypes.objectOf.isRequired,\n  id: PropsTypes.number.isRequired,\n};\n\nexport default TodoItem;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React from 'react';\nimport PropsTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ todo, allCompleted, todoState }) => {\n  const handleCompleted = () => {\n    const newTodo = todo.map(item => ({\n      ...item,\n      isCompleted: !checkCompleted,\n    }));\n\n    allCompleted(newTodo);\n  };\n\n  const checkCompleted = todoState.every(item => item.isCompleted);\n\n  return (\n    <section className=\"main\">\n      <input\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        checked={checkCompleted}\n        onChange={handleCompleted}\n      />\n      <label\n        htmlFor=\"toggle-all\"\n        className={`todo__label\n          ${todo.length ? 'show--toggle' : ''}`}\n      >\n        Mark all as complete\n      </label>\n\n      <ul className=\"todo-list\">\n        {todo.map((item, index) => (\n          <TodoItem\n            item={item}\n            id={index + 1}\n            todo={todo}\n            changeCompleted={allCompleted}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nTodoList.propTypes = {\n  todo: PropsTypes.arrayOf.isRequired,\n  allCompleted: PropsTypes.func.isRequired,\n  todoState: PropsTypes.arrayOf.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropsTypes from 'prop-types';\n\nclass Filters extends React.Component {\n  filterType = ['All', 'Active', 'Completed'];\n\n  state = {\n    selectFilter: this.filterType[0],\n  }\n\n  handleClick = (event) => {\n    this.setState({\n      selectFilter: event.target.textContent,\n    });\n    this.props.handleFilter(event.target.textContent);\n  }\n\n  render() {\n    const { selectFilter } = this.state;\n\n    return (\n      this.filterType.map(filter => (\n        <li key={filter}>\n          <a\n            href=\"#/\"\n            className={selectFilter === filter\n              ? 'selected'\n              : ''}\n            onClick={this.handleClick}\n          >\n            {filter}\n          </a>\n        </li>\n      ))\n    );\n  }\n}\n\nFilters.propTypes = {\n  handleFilter: PropsTypes.func.isRequired,\n};\n\nexport default Filters;\n","import React from 'react';\nimport PropsTypes from 'prop-types';\nimport Filters from './Filters';\n\nconst Footer = ({ todo, handleTodo, setFilter }) => {\n  const handleClear = () => (\n    handleTodo(todo.filter(elem => !elem.isCompleted))\n  );\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        {`${todo.length} items left`}\n      </span>\n\n      <ul className=\"filters\">\n        <Filters\n          todo={todo}\n          handleFilter={setFilter}\n        />\n      </ul>\n\n      <button\n        type=\"button\"\n        onClick={handleClear}\n        className={`clear-completed\n        ${todo.some(item => item.isCompleted)\n      ? 'show__clear-button'\n      : ''}`}\n      >\n        Clear completed\n      </button>\n    </footer>\n  );\n};\n\nFooter.propTypes = {\n  todo: PropsTypes.arrayOf.isRequired,\n  handleTodo: PropsTypes.func.isRequired,\n  setFilter: PropsTypes.func.isRequired,\n};\n\nexport default Footer;\n","import React from 'react';\nimport InputTodo from './Components/InputTodo';\nimport TodoList from './Components/TodoList';\nimport Footer from './Components/Footer';\n\nclass App extends React.Component {\n  state = {\n    todo: [],\n    filter: '',\n    enterTodo: false,\n  }\n\n  handleAddTodo = todo => (\n    this.setState(state => ({\n      todo: [...state.todo, {\n        title: todo,\n        isCompleted: false,\n      }],\n      enterTodo: true,\n    }))\n  )\n\n  handleChangeTodo = todo => (\n    this.setState({ todo })\n  )\n\n  handleSetFilter = filter => (\n    this.setState({ filter })\n  )\n\n  filterTodo = () => {\n    switch (this.state.filter) {\n      case 'Active':\n        return this.state.todo.filter(\n          elem => (!elem.isCompleted)\n        );\n      case 'Completed':\n        return this.state.todo.filter(\n          elem => (elem.isCompleted)\n        );\n      default:\n        return [...this.state.todo];\n    }\n  }\n\n  render() {\n    const todoFilter = this.filterTodo();\n    const { enterTodo, todo } = this.state;\n\n    return (\n      <section className=\"todoapp\">\n        <InputTodo handleTodo={this.handleAddTodo} />\n        <TodoList\n          todo={todoFilter}\n          todoState={todo}\n          allCompleted={this.handleChangeTodo}\n        />\n        {enterTodo && todo.length > 0\n          ? (\n            <Footer\n              todo={todoFilter}\n              handleTodo={this.handleChangeTodo}\n              setFilter={this.handleSetFilter}\n            />\n          )\n          : ''}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}