{"version":3,"sources":["Components/InputTodo.js","Components/TodoItem.js","Components/TodoList.js","Components/Filters.js","Components/Footer.js","App.js","index.js"],"names":["InputTodo","state","newTodo","enterValue","event","preventDefault","_this","props","handleTodo","setState","handleBlur","target","value","_this2","this","react_default","a","createElement","onSubmit","className","placeholder","onChange","onBlur","React","Component","TodoItem","_ref","todo","item","id","changeCompleted","todoState","key","Date","type","concat","defaultChecked","isCompleted","onClick","map","elem","Object","objectSpread2","htmlFor","title","filter","TodoList","allCompleted","checkCompleted","every","checked","length","index","Components_TodoItem","Filters","selectFilter","handleFilter","keys","all","active","completed","href","cn","selected","Footer","setFilter","Components_Filters","showButton","some","App","todos","handleAddTodo","toConsumableArray","handleChangeTodo","setCurrentFilter","filterTodo","todoFilter","_this$state","Components_InputTodo","Components_TodoList","Components_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f74578d0.chunk.js","sourcesContent":["import React from 'react';\nimport PropsTypes from 'prop-types';\n\nclass InputTodo extends React.Component {\n  state = {\n    newTodo: '',\n  }\n\n  enterValue = (event) => {\n    event.preventDefault();\n\n    if (this.state.newTodo !== '') {\n      this.props.handleTodo(this.state.newTodo);\n      this.setState({ newTodo: '' });\n    }\n  }\n\n  handleBlur = (event) => {\n    if (event.target.value !== '') {\n      this.props.handleTodo(event.target.value);\n      this.setState({ newTodo: '' });\n    }\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.enterValue}>\n        <header className=\"header\">\n          <h1>todos</h1>\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={this.state.newTodo}\n            onChange={event => (\n              this.setState({\n                newTodo: event.target.value,\n              })\n            )}\n            onBlur={this.handleBlur}\n          />\n        </header>\n      </form>\n    );\n  }\n}\n\nInputTodo.propTypes = { handleTodo: PropsTypes.func.isRequired };\n\nexport default InputTodo;\n","import React from 'react';\nimport PropsTypes from 'prop-types';\n\nconst TodoItem = ({ todo, item, id, changeCompleted, todoState }) => {\n  const handleCompleted = () => (\n    changeCompleted(todoState.map(elem => (\n      item === elem\n        ? {\n          ...elem,\n          isCompleted: !item.isCompleted,\n        }\n        : elem\n    )))\n  );\n\n  return (\n    <li\n      className=\"\"\n      key={+new Date()}\n    >\n      <div\n        className=\"view\"\n      >\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          id={`todo-${id}`}\n          defaultChecked={item.isCompleted}\n          onClick={handleCompleted}\n        />\n        <p\n          htmlFor={`todo-${id}`}\n          className={`todo__item\n              ${item.isCompleted ? 'label--completed' : ''}`}\n        >\n          {item.title}\n        </p>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => (\n            changeCompleted(todoState.filter(elem => (elem !== item)))\n          )}\n        />\n      </div>\n    </li>\n  );\n};\n\nTodoItem.propTypes = {\n  todo: PropsTypes.arrayOf.isRequired,\n  changeCompleted: PropsTypes.func.isRequired,\n  item: PropsTypes.objectOf.isRequired,\n  id: PropsTypes.number.isRequired,\n  todoState: PropsTypes.arrayOf.isRequired,\n};\n\nexport default TodoItem;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React from 'react';\nimport PropsTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ todo, allCompleted, todoState }) => {\n  const handleCompleted = () => {\n    const newTodo = todoState.map(item => ({\n      ...item,\n      isCompleted: !checkCompleted,\n    }));\n\n    allCompleted(newTodo);\n  };\n\n  const checkCompleted = todoState.every(item => item.isCompleted);\n\n  return (\n    <section className=\"main\">\n      <input\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        checked={checkCompleted}\n        onChange={handleCompleted}\n      />\n      <label\n        htmlFor=\"toggle-all\"\n        className={`todo__label\n          ${todoState.length ? 'show--toggle' : ''}`}\n      >\n        Mark all as complete\n      </label>\n\n      <ul className=\"todo-list\">\n        {todo.map((item, index) => (\n          <TodoItem\n            item={item}\n            id={index + 1}\n            todoState={todoState}\n            todo={todo}\n            changeCompleted={allCompleted}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nTodoList.propTypes = {\n  todo: PropsTypes.arrayOf.isRequired,\n  allCompleted: PropsTypes.func.isRequired,\n  todoState: PropsTypes.arrayOf.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropsTypes from 'prop-types';\nimport cn from 'classnames';\n\nconst Filters = ({ selectFilter, handleFilter }) => {\n  const FILTER_TYPES = {\n    all: 'all',\n    active: 'active',\n    completed: 'completed',\n  };\n\n  return (\n    Object.keys(FILTER_TYPES).map(filter => (\n      <li key={filter}>\n        <a\n          href=\"#/\"\n          className={cn({ selected: selectFilter === filter })}\n          onClick={() => handleFilter(filter)}\n        >\n          {filter}\n        </a>\n      </li>\n    ))\n  );\n};\n\nFilters.propTypes = {\n  handleFilter: PropsTypes.func.isRequired,\n};\n\nexport default Filters;\n","import React from 'react';\nimport PropsTypes from 'prop-types';\nimport cn from 'classnames';\nimport Filters from './Filters';\n\nconst Footer = ({ todo, handleTodo, setFilter, todoState, selectFilter }) => {\n  const handleClear = () => (\n    handleTodo(todoState.filter(elem => !elem.isCompleted))\n  );\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        {`${todoState.filter(item => !item.isCompleted).length}\n        items left`}\n      </span>\n\n      <ul className=\"filters\">\n        <Filters\n          todo={todo}\n          handleFilter={setFilter}\n          selectFilter={selectFilter}\n        />\n      </ul>\n\n      <button\n        type=\"button\"\n        onClick={handleClear}\n        className={`clear-completed\n        ${cn({ showButton: todo.some(item => item.isCompleted) })}`}\n      >\n        Clear completed\n      </button>\n    </footer>\n  );\n};\n\nFooter.propTypes = {\n  todo: PropsTypes.arrayOf.isRequired,\n  handleTodo: PropsTypes.func.isRequired,\n  setFilter: PropsTypes.func.isRequired,\n  todoState: PropsTypes.arrayOf.isRequired,\n  selectFilter: PropsTypes.string.isRequired,\n};\n\nexport default Footer;\n","import React from 'react';\nimport InputTodo from './Components/InputTodo';\nimport TodoList from './Components/TodoList';\nimport Footer from './Components/Footer';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    filter: '',\n  }\n\n  handleAddTodo = todo => (\n    this.setState(state => ({\n      todos: [...state.todos, {\n        title: todo,\n        isCompleted: false,\n      }],\n    }))\n  )\n\n  handleChangeTodo = todos => (\n    this.setState({ todos })\n  )\n\n  setCurrentFilter = filter => (\n    this.setState({ filter })\n  )\n\n  filterTodo = () => {\n    const { todos } = this.state;\n\n    switch (this.state.filter) {\n      case 'active':\n        return todos.filter(\n          elem => (!elem.isCompleted)\n        );\n      case 'completed':\n        return todos.filter(\n          elem => (elem.isCompleted)\n        );\n      default:\n        return [...todos];\n    }\n  }\n\n  render() {\n    const todoFilter = this.filterTodo();\n    const { todos, filter } = this.state;\n\n    return (\n      <section className=\"todoapp\">\n        <InputTodo handleTodo={this.handleAddTodo} />\n        <TodoList\n          todo={todoFilter}\n          todoState={todos}\n          allCompleted={this.handleChangeTodo}\n        />\n        {todos.length > 0\n          ? (\n            <Footer\n              todoState={todos}\n              todo={todoFilter}\n              handleTodo={this.handleChangeTodo}\n              setFilter={this.setCurrentFilter}\n              selectFilter={filter}\n            />\n          )\n          : ''}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}